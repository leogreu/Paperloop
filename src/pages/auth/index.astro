---
import "@/styles/globals.css";
import { actions } from "astro:actions";
import { CircleAlert } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import {
    Card,
    CardHeader,
    CardTitle,
    CardDescription,
    CardContent,
} from "@/components/ui/card";

import Layout from "@/components/custom/layout.astro";
import GoogleIcon from "@/icons/brands/google.svg?raw";
import { defaultLocale, getPreferredLocale, getTranslations } from "@/utils/i18n.ts";

// For authenticated users, show docs
if (Astro.locals.user) return Astro.redirect("/docs");

const result = Astro.getActionResult(actions.auth);
if (result?.data) return Astro.redirect(result.data);

const type = Astro.url.searchParams.get("type") || "login";
const locale = getPreferredLocale(Astro.request.headers) ?? defaultLocale;
const i18n = getTranslations(locale);
---

<Layout title={i18n(type)} description={type}>
    <form action={actions.auth} method="POST" class="h-full flex items-center justify-center" data-astro-reload>
        <Card className="max-w-sm">
            <CardHeader>
                <CardTitle className="text-2xl">
                    {i18n(type)}
                </CardTitle>
                <CardDescription>
                    {i18n(type + "-text")}
                </CardDescription>
            </CardHeader>
            <CardContent className="flex flex-col gap-4">
                <div class="grid gap-2">
                    <Label htmlFor="email">Email</Label>
                    <Input name="email" type="email"/>
                </div>
                <div class="grid gap-2">
                    <div class="flex items-center">
                        <Label htmlFor="password">Password</Label>
                        {type === "login" && false &&
                            <a href="#" class="ml-auto inline-block text-sm underline">
                                {i18n("forgot-password")}
                            </a>
                        }
                    </div>
                    <Input name="password" type="password" minLength={6} />
                </div>
                {result?.error &&
                    <Alert className="bg-secondary">
                        <CircleAlert className="h-4 w-4" />
                        <AlertTitle>
                            {i18n("error")}
                        </AlertTitle>
                        <AlertDescription>
                            {i18n(type + "-error")}
                        </AlertDescription>
                    </Alert>
                }
                <Button type="submit" name="type" value={type} className="w-full">
                    {i18n(type)}
                </Button>
                <div class="relative my-2">
                    <div class="absolute inset-0 flex items-center">
                        <span class="w-full border-t" />
                    </div>
                    <div class="relative flex justify-center text-xs uppercase">
                        <span class="bg-background px-2 text-muted-foreground">
                            {i18n("or-continue-with")}
                        </span>
                    </div>
                </div>
                <div class="flex gap-2">
                    <Button type="submit" name="provider" value="google" variant="outline" className="w-full">
                        <div class="mr-2 flex h-4 w-4 fill-primary">
                            <Fragment set:html={GoogleIcon} />
                        </div>
                        <span>Google</span>
                    </Button>
                </div>
            </CardContent>
        </Card>
    </form>
</Layout>
