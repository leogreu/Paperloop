---
import "@/styles/globals.css";
import { db, eq, desc, Document } from "astro:db";
import { Card, CardHeader, CardContent, CardFooter } from "@/components/ui/card";

import Layout from "@/components/custom/layout.astro";
import Empty from "@/components/custom/empty.astro";
import DocumentHeader from "@/components/custom/document-header.astro";
import { getPreferredLocale, getTranslations } from "@/utils/i18n.ts";

if (!Astro.locals.user) return Astro.redirect("/auth/login");

const docs = await db.select().from(Document)
    .where(eq(Document.user, Astro.locals.user.id))
    .orderBy(desc(Document.updated));

const distinct = docs.filter((doc, index) => {
    return index === docs.findIndex(entry => entry.document === doc.document);
});

// Used to provide a language-specific meta alternate link for SEO
const locale = Astro.url.searchParams.get("lang") ?? getPreferredLocale(Astro.request.headers);
const i18n = getTranslations(locale);
---

<Layout title={i18n("my-documents")} locale={locale}>
    {distinct.length
        ? <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 auto-rows-fr gap-4">
            {distinct.map(doc =>
                <a href={"docs/" + doc.id} transition:name={doc.id}>
                    <Card className="flex flex-col h-full cursor-pointer">
                        <CardHeader>
                            <DocumentHeader doc={doc}></DocumentHeader>
                        </CardHeader>
                        <CardContent className="flex-1">
                            <article class="whitespace-pre-line line-clamp-3">
                                {doc.markdown}
                            </article>
                        </CardContent>
                        <CardFooter>
                            <p class="leading-none text-sm text-gray-400">
                                <time datetime={doc.updated.toISOString()}>&nbsp;</time>
                            </p>
                        </CardFooter>
                    </Card>
                </a>
            )}
        </div>
        : <Empty>
            <div slot="title">
                {i18n("no-documents")}
            </div>
            <div slot="text">
                {i18n("no-documents-text")}
            </div>
        </Empty>
    }
</Layout>
