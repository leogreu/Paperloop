---
import { actions } from "astro:actions";
import { FileText, LogIn, User, LogOut } from "lucide-react";
import { Button } from "../ui/button";
import { getPreferredLocale, getTranslations } from "@/utils/i18n.ts";

const locale = getPreferredLocale(Astro.request.headers);
const i18n = getTranslations(locale);
---

<header
    class="flex h-16 items-center gap-4 border-b bg-background px-4 md:px-8"
>
    <nav class="flex flex-row items-center gap-6 text-sm font-semibold">
        <a href="/" class="flex items-center gap-2 text-base font-bold">
            <FileText className="h-6 w-6" />
            <span>Paperloop</span>
        </a>
        {Astro.locals.user &&
            <a
                href="/docs"
                class="hidden md:block text-foreground transition-colors hover:text-foreground"
            >
                {i18n("my-documents")}
            </a>
        }
    </nav>
    <nav class="flex flex-row ml-auto items-center gap-2 text-sm font-semibold">
        <slot></slot>
        {Astro.locals.user
            ? <Button id="add" size="sm" variant="outline">
                <span>{i18n("new-document")}</span>
            </Button>
            <form action={"/" + actions.logout} method="post">
                <Button size="icon" variant="outline" className="h-9 w-9 rounded-full group">
                    <User strokeWidth="2.25" className="h-4 w-4 group-hover:hidden" />
                    <LogOut strokeWidth="2.25" className="hidden h-4 w-4 group-hover:block" />
                </Button>
            </form>
            : <a href="/auth/login">
                <Button size="sm" variant="outline">
                    <LogIn className="mr-2 h-4 w-4" />
                    <span>{i18n("sign-in")}</span>
                </Button>
            </a>
        }
    </nav>
</header>

<script>
    import { actions } from "astro:actions";
    import { navigate } from "astro:transitions/client";

    document.addEventListener("astro:page-load", () => {
        document.querySelector("button#add")?.addEventListener("click", async () => {
            const { data, error } = await actions.createDocument();
            if (!error) navigate(`/docs/${data.id}`);
        });
    });
</script>

<style>
    @media print {    
        header {
            display: none;
        }
    }
</style>
